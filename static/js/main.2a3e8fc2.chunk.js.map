{"version":3,"sources":["styles/theme.js","styles/globalStyle.js","contexts.js","utils.js","WebAPI.js","components/App/Root.style.js","components/Header/Header.style.js","components/Header/Header.js","components/Pagination/Pagination.style.js","components/Pagination/Pagination.js","styles/mediaQueries.js","pages/HomePage/Home.style.js","pages/HomePage/HomePage.js","components/AccountForm.js","pages/LoginPage/LoginPage.js","pages/PostPage/Post.style.js","pages/PostPage/PostPage.js","components/PostForm.js","pages/CreatePost/CreatePost.js","pages/RegisterPage/RegisterPage.js","image/photo-1449247709967-d4461a6a6103.jpg","pages/AboutPage/AboutPage.js","pages/EditPage/EditPage.js","components/App/App.js","index.js"],"names":["theme","color","primary","secondary","tertiary","background","line","sm","lg","font","md","xl","fontWeight","space","ResetStyle","createGlobalStyle","GlobalStyle","AuthContext","createContext","postContext","TOKEN_NAME","timeConverter","createdTime","Date","getDate","toLocaleString","getMonth","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","fetch","then","res","json","getMe","headers","authorization","Root","styled","div","HeaderContainer","NavListContainer","AccountContainer","Logo","h1","Nav","Link","Header","useContext","user","setUser","history","useHistory","$active","to","onClick","push","PaginationContainer","PageButton","button","Pagination","postsPerPage","totoalPageCount","handlePageClick","pageNumbers","length","Math","ceil","i","map","pageNumber","breakpoints","size","xs","xxl","device","HomePageContainer","PostsContainer","PostContainer","PostTitle","p","PostDate","Post","post","id","title","createdAt","HomePage","useState","posts","setPosts","setTotoalPageCount","currentPage","setCurrentPage","useEffect","page","limit","data","AccountPageContainer","AccountForm","form","AccountPageTitle","InputWrapper","UserNameInput","input","NickNameInput","PasswordInput","SubmitBtn","ErrorMsg","LoginPage","userName","setUserName","password","setPassword","errorMessage","setErrorMessage","style","onSubmit","e","preventDefault","username","method","body","JSON","stringify","login","ok","message","toString","type","placeholder","value","onChange","target","PostPageContainer","PostTime","h4","PostContent","Button","props","delete","PostPage","useParams","singlePost","setSinglePost","getSinglePost","deletePost","PostFormContainer","PostForm","TitleInput","ContentInput","textarea","CreatePost","setTitle","content","setContent","postArticle","rows","RegisterPage","nickName","values","setValues","errors","setErrors","apiResError","setApiResError","handleChange","name","handleFocus","nickname","trim","validation","onFocus","AboutPageContainer","AboutPhoto","AboutTitle","AboutPage","EditPage","defaultTitle","filter","Number","defaultContent","newTitle","setNewTitle","newContent","setNewContent","newBody","updatePost","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a3e8fc2.chunk.js","sourcesContent":["const theme = {\n  color: {\n    primary: \"#f8b500\",\n    secondary: \"#393e46\",\n    tertiary: \"#5c636e\",\n    background: \"#f7f7f7\",\n  },\n  line: {\n    sm: \"1px\",\n    lg: \"9px\",\n  },\n  font: {\n    sm: \"12px\",\n    md: \"18px\",\n    lg: \"24px\",\n    xl: \"36px\",\n  },\n  fontWeight: {\n    sm: 400,\n    md: 600,\n  },\n  space: {\n    sm: \"6px\",\n    md: \"12px\",\n    lg: \"18px\",\n  },\n};\n\nexport default theme;\n","import { createGlobalStyle } from \"styled-components\";\nexport const ResetStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\naddress, caption, cite, code, dfn, em, strong, th, var, b {\n  font-weight: normal;\n  font-style: normal;\n}\nabbr, acronym {\n  border: 0;\n}\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n    line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption, th {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n`;\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%; \n  font-family: 'HelveticaNeue', Helvetica, Arial, 'Lucida Grande', sans-serif;\n}\n`;\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n\nexport const postContext = createContext(\"\");\n","const TOKEN_NAME = \"token\";\n\nexport const timeConverter = (createdTime) => {\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  return `${new Date(createdTime).getDate().toLocaleString()}, ${\n    monthNames[new Date(createdTime).getMonth().toLocaleString()]\n  }`;\n};\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport const validation = (values) => {\n  let errors = {};\n\n  // checking username\n  if (!values.userName.trim()) {\n    errors.userName = \"User Name is required\";\n  } else {\n    errors.userName = \"\";\n  }\n\n  // checking nickname\n  if (!values.nickName.trim()) {\n    errors.nickName = \"Nick Name is required\";\n  } else {\n    errors.nickName = \"\";\n  }\n\n  // checking password\n  if (!values.password.trim()) {\n    errors.password = \"Password is required\";\n  } else {\n    errors.password = \"\";\n  }\n\n  return errors;\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getSinglePost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getLimitPost = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  // get token from localStorage\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const postArticle = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const updatePost = ({ newTitle, newBody, id }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title: newTitle,\n      body: newBody,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: { authorization: `Bearer ${token}` },\n  }).then((res) => res.json());\n};\n\nexport const registerAccount = (username, nickname, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\nconst Root = styled.div`\n  font-size: ${theme.font.md};\n  min-height: 100vh;\n  width: 100%;\n  background-color: ${theme.color.background};\n  border: ${theme.line.lg} solid ${theme.color.primary};\n`;\n\nexport default Root;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport theme from \"../../styles/theme\";\n\nexport const HeaderContainer = styled.div`\n  height: 72px;\n  display: flex;\n  justify-content: space-between;\n  padding-left: ${theme.space.md};\n  align-items: center;\n`;\n\nexport const NavListContainer = styled.div``;\nexport const AccountContainer = styled.div``;\n\nexport const Logo = styled.h1`\n  font-size: ${theme.font.xl};\n  margin-bottom: ${theme.space.sm};\n  font-weight: ${theme.fontWeight.md};\n  color: ${theme.color.secondary};\n`;\nexport const Nav = styled(Link)`\n  color: ${theme.color.secondary};\n  margin-right: ${theme.space.sm};\n  cursor: pointer;\n  transition: color 0.3s ease-in-out;\n  &:hover {\n    color: ${theme.color.primary};\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport {\n  HeaderContainer,\n  NavListContainer,\n  AccountContainer,\n  Logo,\n  Nav,\n} from \"./Header.style\";\n\nexport default function Header() {\n  const { user, setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const handleLogOut = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    history.push(\"/\");\n  };\n  return (\n    <HeaderContainer>\n      <NavListContainer>\n        <Logo>Contenido</Logo>\n        <Nav $active to=\"/\">\n          HOME\n        </Nav>\n        <Nav to=\"/about\">About</Nav>\n        {user && <Nav to=\"/createPost\">Write</Nav>}\n      </NavListContainer>\n      <AccountContainer>\n        {user ? (\n          <Nav to=\"/\" onClick={handleLogOut}>\n            Sign Out\n          </Nav>\n        ) : (\n          <Nav to=\"/login\">Sign In</Nav>\n        )}\n        {!user && <Nav to=\"/register\">Register</Nav>}\n      </AccountContainer>\n    </HeaderContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const PageButton = styled.button`\n  font-size: ${theme.font.sm};\n  padding: ${theme.space.md};\n  border: ${theme.line.sm} solid ${theme.color.tertiary};\n  cursor: pointer;\n  margin-right: ${theme.space.md};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PaginationContainer, PageButton } from \"./Pagination.style\";\n\nconst Pagination = ({ postsPerPage, totoalPageCount, handlePageClick }) => {\n  const pageNumbers = [];\n  const length = Math.ceil(totoalPageCount / postsPerPage);\n  for (let i = 1; i <= length; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <PaginationContainer>\n      {pageNumbers.map((pageNumber) => (\n        <PageButton\n          key={pageNumber}\n          onClick={() => {\n            handlePageClick(pageNumber);\n          }}\n        >\n          {pageNumber}\n        </PageButton>\n      ))}\n    </PaginationContainer>\n  );\n};\n\nPagination.propTypes = {\n  postsPerPage: PropTypes.number,\n  totoalPageCount: PropTypes.number,\n  handlePageClick: PropTypes.func,\n};\n\nexport default Pagination;\n","export const breakpoints = {\n  xs: 576,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1440,\n  xxl: 1800,\n};\n\nexport const size = {\n  xs: `${breakpoints.xs}px`,\n  sm: `${breakpoints.sm}px`,\n  md: `${breakpoints.md}px`,\n  lg: `${breakpoints.lg}px`,\n  xl: `${breakpoints.xl}px`,\n  xxl: `${breakpoints.xxl}px`,\n};\n\nexport const device = {\n  xs: `(min-width: ${size.xs})`,\n  sm: `(min-width: ${size.sm})`,\n  md: `(min-width: ${size.md})`,\n  lg: `(min-width: ${size.lg})`,\n  xl: `(min-width: ${size.xl})`,\n  xxl: `(min-width: ${size.xxl})`,\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { device } from \"../../styles/mediaQueries\";\nimport theme from \"../../styles/theme\";\n\nexport const HomePageContainer = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  padding: ${theme.space.md};\n\n  @media ${device.md} {\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 80vw;\n    height: calc(100vh - 98px);\n  }\n`;\n\nexport const PostsContainer = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  @media ${device.md} {\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const PostContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  height: 200px;\n  border: 1px solid ${theme.color.primary};\n  margin-bottom: ${theme.space.md};\n  cursor: pointer;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: transform 0.2s ease-in-out;\n  padding: ${theme.space.sm};\n\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    transform: scale(1.1);\n  }\n\n  @media ${device.md} {\n    min-width: 18vw;\n    margin-right: ${theme.space.lg};\n  }\n`;\nexport const PostTitle = styled.p`\n  font-weight: ${theme.fontWeight.md};\n  color: ${theme.color.secondary};\n  font-size: ${theme.font.md};\n\n  @media ${device.md} {\n    font-size: ${theme.font.lg};\n  }\n`;\nexport const PostDate = styled.div`\n  font-weight: ${theme.fontWeight.sm};\n  color: ${theme.color.tertiary};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Proptypes from \"prop-types\";\nimport { getPosts, getLimitPost } from \"../../WebAPI\";\nimport Pagination from \"../../components/Pagination\";\nimport { timeConverter } from \"../../utils\";\nimport {\n  HomePageContainer,\n  PostsContainer,\n  PostContainer,\n  PostTitle,\n  PostDate,\n} from \"./Home.style\";\n\nfunction Post({ post }) {\n  return (\n    <PostContainer to={`/posts/${post.id}`}>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{timeConverter(post.createdAt)}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: Proptypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [totoalPageCount, setTotoalPageCount] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 5;\n\n  useEffect(() => {\n    getPosts().then((res) => setTotoalPageCount(res.length));\n  });\n\n  useEffect(() => {\n    getLimitPost(currentPage, postsPerPage).then((data) => setPosts(data));\n  }, [currentPage]);\n\n  const handlePageClick = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <HomePageContainer>\n      <PostsContainer>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostsContainer>\n      <Pagination\n        postsPerPage={postsPerPage}\n        totoalPageCount={totoalPageCount}\n        handlePageClick={handlePageClick}\n      />\n    </HomePageContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport theme from \"../styles/theme\";\n\nexport const AccountPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: calc(100% - 18px);\n  max-width: 550px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  padding: 30px 25px;\n  box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.3);\n  background-color: ${theme.color.background};\n`;\n\nexport const AccountForm = styled.form`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const AccountPageTitle = styled.div`\n  font-size: 32px;\n  font-weight: ${theme.fontWeight.md};\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n`;\nexport const UserNameInput = styled.input`\n  padding: ${theme.space.md};\n  font-size: ${theme.font.md};\n  background-color: ${theme.color.background};\n  line-height: 20px;\n  width: 100%;\n  margin-top: 16px;\n  border-width: 0px 0px 2px;\n`;\nexport const NickNameInput = styled(UserNameInput)``;\nexport const PasswordInput = styled(UserNameInput)``;\n\nexport const SubmitBtn = styled.button`\n  background-color: ${theme.color.primary};\n  color: #ffffff;\n  padding: 20px;\n  margin-top: 20px;\n  font-weight: ${theme.fontWeight.md};\n  font-size: 16px;\n  width: 50%;\n  cursor: pointer;\n  transition: transform 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ErrorMsg = styled.p`\n  color: #ff0000;\n`;\n","import React, { useState, useContext } from \"react\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  AccountPageContainer,\n  SubmitBtn,\n  AccountForm,\n  AccountPageTitle,\n  UserNameInput,\n  PasswordInput,\n} from \"../../components/AccountForm\";\n\nexport default function LoginPage() {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const { setUser } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    login(userName, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      // 當登入完後，要確認使用者身分\n      getMe().then((res) => {\n        if (res.ok !== 1) {\n          // 有拿到token，但還是沒有登入成功\n          setAuthToken(null);\n          return setErrorMessage(res.toString());\n        }\n        setUser(res.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleUsernameInput = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <AccountPageContainer>\n      <AccountPageTitle>Login</AccountPageTitle>\n      {errorMessage && <div style={{ color: \"red\" }}>{errorMessage}</div>}\n      <AccountForm onSubmit={handleFormSubmit}>\n        <UserNameInput\n          type=\"text\"\n          placeholder=\"Enter your username\"\n          value={userName}\n          onChange={handleUsernameInput}\n        />\n        <PasswordInput\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          value={password}\n          onChange={handlePasswordInput}\n        />\n        <SubmitBtn>Sign In</SubmitBtn>\n      </AccountForm>\n    </AccountPageContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\nexport const PostPageContainer = styled.div`\n  width: 100%;\n  max-width: 850px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding: ${theme.space.md};\n`;\n\nexport const PostTitle = styled.h1`\n  font-size: ${theme.font.xl};\n  margin-bottom: ${theme.space.md};\n  font-weight: ${theme.fontWeight.md};\n  color: ${theme.color.secondary};\n`;\n\nexport const PostTime = styled.h4``;\n\nexport const PostContent = styled.p`\n  line-height: 1.5;\n  white-space: pre-line;\n  word-break: break-all;\n`;\n\nexport const Button = styled.button`\n  background-color: ${(props) => (props.delete ? \"#393e46\" : \"#f8b500\")};\n  color: ${(props) => (props.delete ? \"#ffffff\" : \"#393e46\")};\n  padding: 12px 18px;\n  margin-right: ${theme.space.md};\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { getSinglePost, deletePost } from \"../../WebAPI\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { timeConverter } from \"../../utils\";\nimport {\n  PostPageContainer,\n  PostTitle,\n  PostTime,\n  PostContent,\n  Button,\n} from \"./Post.style\";\n\nexport default function PostPage() {\n  const { id } = useParams();\n  const [singlePost, setSinglePost] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    getSinglePost(id).then((data) => setSinglePost(data[0]));\n  }, [id, singlePost]);\n\n  useEffect(() => {\n    return () => setSinglePost(null);\n  }, []);\n\n  const handleDeletePost = () => {\n    deletePost(id).then(() => history.push(\"/\"));\n  };\n\n  const handleEditPost = () => {\n    history.push(`/editPost/${id}`);\n  };\n\n  return (\n    <PostPageContainer>\n      {singlePost && <PostTitle>{singlePost.title}</PostTitle>}\n      {singlePost && <PostTime>{timeConverter(singlePost.createdAt)}</PostTime>}\n      {singlePost && <PostContent>{singlePost.body}</PostContent>}\n      {singlePost && <Button onClick={handleEditPost}>Edit</Button>}\n      {singlePost && (\n        <Button delete onClick={handleDeletePost}>\n          Delete\n        </Button>\n      )}\n    </PostPageContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport theme from \"../styles/theme\";\n\nexport const PostFormContainer = styled.div`\n  width: 100%;\n  max-width: 850px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  padding: 30px 25px;\n  box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.3);\n  background-color: ${theme.color.background};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const PostForm = styled.form`\n  width: 100%;\n  text-align: center;\n`;\nexport const TitleInput = styled.input`\n  padding: 12px 10px;\n  font-size: 32px;\n  line-height: 20px;\n  width: 100%;\n  margin-top: 16px;\n  border: 0;\n  background-color: ${theme.color.background};\n`;\nexport const ContentInput = styled.textarea`\n  padding: 12px 10px;\n  font-size: 16px;\n  width: 100%;\n  margin-top: 20px;\n  border: 0;\n  background-color: ${theme.color.background};\n`;\n","import React, { useState } from \"react\";\nimport { postArticle } from \"../../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  PostFormContainer,\n  PostForm,\n  TitleInput,\n  ContentInput,\n} from \"../../components/PostForm\";\n\nimport { SubmitBtn, ErrorMsg } from \"../../components/AccountForm\";\n\nexport default function CreatePost() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n\n  const history = useHistory();\n\n  const handlePostSubmit = (e) => {\n    e.preventDefault();\n    postArticle(title, content).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      history.push(\"/\");\n    });\n  };\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  return (\n    <PostFormContainer>\n      {errorMessage && <ErrorMsg>{errorMessage}</ErrorMsg>}\n      <PostForm onSubmit={handlePostSubmit}>\n        <TitleInput\n          type=\"text\"\n          onChange={handleTitleChange}\n          value={title}\n          placeholder=\"New post title here...\"\n        />\n        <ContentInput\n          onChange={handleContentChange}\n          value={content}\n          placeholder=\"write your post content here...\"\n          rows=\"10\"\n        />\n        <SubmitBtn>Submit</SubmitBtn>\n      </PostForm>\n    </PostFormContainer>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { validation } from \"../../utils\";\nimport { getMe, registerAccount } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AccountPageContainer,\n  SubmitBtn,\n  AccountForm,\n  AccountPageTitle,\n  UserNameInput,\n  InputWrapper,\n  NickNameInput,\n  PasswordInput,\n  ErrorMsg,\n} from \"../../components/AccountForm\";\n\nexport default function RegisterPage() {\n  const [values, setValues] = useState({\n    userName: \"\",\n    nickName: \"\",\n    password: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const [apiResError, setApiResError] = useState();\n  const { setUser } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!values.userName || !values.nickName || !values.password) {\n      setErrors(validation(values));\n      return;\n    }\n    registerAccount(values.userName, values.nickName, values.password).then(\n      (res) => {\n        if (res.ok !== 1) {\n          return setApiResError(res.message);\n        }\n        setApiResError(res.message);\n        setAuthToken(res.token);\n\n        getMe().then((res) => {\n          if (res.ok !== 1) {\n            setAuthToken(null);\n            return setApiResError(res.toString());\n          }\n          setUser(res.data);\n          history.push(\"/\");\n        });\n      }\n    );\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleFocus = (e) => {\n    const { name } = e.target;\n    setErrors({ ...errors, [name]: \"\" });\n  };\n\n  return (\n    <AccountPageContainer>\n      <AccountPageTitle>Register</AccountPageTitle>\n      {apiResError && <ErrorMsg>{apiResError}</ErrorMsg>}\n      <AccountForm onSubmit={handleSubmit}>\n        <InputWrapper>\n          <UserNameInput\n            name=\"userName\"\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={handleChange}\n            value={values.userName}\n            onFocus={handleFocus}\n          />\n        </InputWrapper>\n        {errors.userName && <ErrorMsg>{errors.userName}</ErrorMsg>}\n        <InputWrapper>\n          <NickNameInput\n            name=\"nickName\"\n            type=\"text\"\n            placeholder=\"Nickname\"\n            onChange={handleChange}\n            value={values.nickName}\n            onFocus={handleFocus}\n          />\n        </InputWrapper>\n        {errors.nickName && <ErrorMsg>{errors.nickName}</ErrorMsg>}\n        <InputWrapper>\n          <PasswordInput\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            onChange={handleChange}\n            value={values.password}\n            onFocus={handleFocus}\n          />\n        </InputWrapper>\n        {errors.password && <ErrorMsg>{errors.password}</ErrorMsg>}\n        <SubmitBtn>Create An Account</SubmitBtn>\n      </AccountForm>\n    </AccountPageContainer>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/photo-1449247709967-d4461a6a6103.647bcb7a.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport background from \"../../image/photo-1449247709967-d4461a6a6103.jpg\";\n\nconst AboutPageContainer = styled.div`\n  width: 100%;\n  max-width: 550px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  padding: 30px 25px;\n  box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.3);\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst AboutPhoto = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  background: url(${background}) center bottom;\n`;\n\nconst AboutTitle = styled.h1`\n  margin-top: 16px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <AboutPageContainer>\n      <AboutPhoto />\n      <AboutTitle>Contenido</AboutTitle>\n    </AboutPageContainer>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { updatePost } from \"../../WebAPI\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { postContext } from \"../../contexts\";\n\nimport {\n  PostFormContainer,\n  PostForm,\n  TitleInput,\n  ContentInput,\n} from \"../../components/PostForm\";\n\nimport { SubmitBtn, ErrorMsg } from \"../../components/AccountForm\";\n\nexport default function EditPage() {\n  const { id } = useParams();\n  const { posts } = useContext(postContext);\n  const defaultTitle = posts.filter((post) => post.id === Number(id))[0].title;\n  const defaultContent = posts.filter((post) => post.id === Number(id))[0].body;\n  const [newTitle, setNewTitle] = useState(defaultTitle);\n  const [newContent, setNewContent] = useState(defaultContent);\n  const [errorMessage, setErrorMessage] = useState();\n\n  const history = useHistory();\n\n  const handlePostSubmit = (e) => {\n    e.preventDefault();\n    updatePost({ newTitle, newContent, id }).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      history.push(\"/\");\n    });\n  };\n\n  const handleTitleChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const handleContentChange = (e) => {\n    setNewContent(e.target.value);\n  };\n\n  return (\n    <PostFormContainer>\n      {errorMessage && <ErrorMsg>{errorMessage}</ErrorMsg>}\n      <PostForm onSubmit={handlePostSubmit}>\n        <TitleInput type=\"text\" onChange={handleTitleChange} value={newTitle} />\n        <ContentInput\n          onChange={handleContentChange}\n          value={newContent}\n          rows=\"10\"\n        />\n        <SubmitBtn>Submit</SubmitBtn>\n      </PostForm>\n    </PostFormContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../../styles/theme\";\nimport { ResetStyle, GlobalStyle } from \"../../styles/globalStyle\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthContext, postContext } from \"../../contexts\";\nimport { getMe, getPosts } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nimport Root from \"./Root.style\";\nimport Header from \"../Header\";\nimport HomePage from \"../../pages/HomePage\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport CreatePost from \"../../pages/CreatePost\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport EditPage from \"../../pages/EditPage\";\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n  // if login, it should keep the login state\n  useEffect(() => {\n    const token = getAuthToken();\n    if (token) {\n      getMe().then((res) => {\n        if (res.ok === 1) {\n          setUser(res.data);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    getPosts().then((data) => setPosts(data));\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <postContext.Provider value={{ posts }}>\n        <ThemeProvider theme={theme}>\n          <Root>\n            <ResetStyle />\n            <GlobalStyle />\n            <Router>\n              <Header />\n              <Switch>\n                {/* 加入 exact 表示URL一定要全部符合才會導過去 */}\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n                {user && (\n                  <Route path=\"/createPost\">\n                    <CreatePost />\n                  </Route>\n                )}\n                <Route path=\"/posts/:id\">\n                  <PostPage />\n                </Route>\n                <Route path=\"/editPost/:id\">\n                  <EditPage />\n                </Route>\n              </Switch>\n            </Router>\n          </Root>\n        </ThemeProvider>\n      </postContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}